// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @default(autoincrement()) @id
  nickname     String   
  avatar      String
  job     String
  introduce String
  updatedAt DateTime @updatedAt
  auth    Auth?
  articles Article[]
  comments Comment[]
  childrenComment ChildComment[]  @relation(name: "ChildCommentAuthor")
  commentTo ChildComment[] @relation(name: "commentTo")
}
model Auth {
  id        Int      @default(autoincrement()) @id
  identityType    String
  credential    String
  identifier     String
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model Article {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String
  views     Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  comments  Comment[]
}

model Comment {
  id        Int      @default(autoincrement()) @id
  content   String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  childrenComment ChildComment[]
}

model ChildComment {
  id        Int      @default(autoincrement()) @id
  content   String
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
  author    User     @relation(fields: [authorId], references: [id], name: "ChildCommentAuthor")
  authorId  Int
  commentToId Int
  commentTo User     @relation(fields: [commentToId], references: [id], name: "commentTo")
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}